# The name of this workflow as it appears in the Actions tab of your repository.
name: CI - Internal PRs Auto-Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/flutter-setup

      - name: Run Tests
        shell: bash
        run: flutter test

  test_windows:
    name: Test Windows
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/flutter-setup

      - name: Run Windows Integration Tests
        shell: bash
        working-directory: example
        run: |
          flutter test integration_test/original_package_test.dart -d windows;
          flutter test integration_test/path_provider_windows_test.dart -d windows;

  test_linux:
    name: Test Linux
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/flutter-setup

      - name: Run Linux Integration Tests
        shell: bash
        working-directory: example
        run: |
          xvfb-run flutter test ./integration_test/original_package_test.dart -d linux;
          xvfb-run flutter test ./integration_test/path_provider_linux_test.dart -d linux;

  test_macos:
    name: Test MacOS
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/flutter-setup

      - name: Run MacOS Integration Tests
        shell: bash
        working-directory: example
        run: |
          flutter test ./integration_test/original_package_test.dart -d macos;
          flutter test ./integration_test/path_provider_foundation_test.dart -d macos;

  ios:
    runs-on: macos-latest
    timeout-minutes: 45

    defaults:
      run:
        working-directory: example
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        name: Install Node.js 20
        with:
          node-version: "20"

      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          distribution: "temurin"
          java-version: "17"

      - uses: hendrikmuhs/ccache-action@c92f40bee50034e84c763e33b317c77adaa81c92
        name: Xcode Compile Cache
        with:
          key: ${{ runner.os }}-ios-v3
          max-size: 700M

      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        name: Pods Cache
        id: pods-cache
        with:
          path: example/ios/Pods
          key: ${{ runner.os }}-pods-v3-${{ hashFiles('example/ios/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-ios-pods-v2

      - name: Firebase Emulator Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: ~/.cache/firebase/emulators
          key: firebase-emulators-v3-${{ github.run_id }}
          restore-keys: firebase-emulators-v3

      - uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1
        with:
          channel: "stable"
          cache: true

      - name: "Bootstrap package"
        run: flutter pub get
      - name: "Install Tools"
        run: |
          sudo npm i -g firebase-tools
      - name: "Build Application"
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          export CCACHE_SLOPPINESS=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros
          export CCACHE_FILECLONE=true
          export CCACHE_DEPEND=true
          export CCACHE_INODECACHE=true
          ccache -s
          flutter build ios --no-codesign --simulator --debug --target=./integration_test/e2e_test.dart --dart-define=CI=true
          ccache -s
      - name: Start Firebase Emulator
        run: sudo chown -R 501:20 "/Users/runner/.npm" && cd ./.github/workflows/scripts && ./start-firebase-emulator.sh
      - name: "E2E Tests"
        run: |
          # Boot simulator and wait for System app to be ready.
          # List of available simulators: https://github.com/actions/runner-images/blob/main/images/macos/macos-14-Readme.md#installed-simulators
          SIMULATOR="iPhone 15"
          xcrun simctl bootstatus "$SIMULATOR" -b
          xcrun simctl logverbose "$SIMULATOR" enable
          # Sleep to allow simulator to settle.
          sleep 15
          # Uncomment following line to have simulator logs printed out for debugging purposes.
          # xcrun simctl spawn booted log stream --predicate 'eventMessage contains "flutter"' &
          flutter test integration_test/e2e_test.dart -d "$SIMULATOR" --dart-define=CI=true

  test_android:
    name: Test Android
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/flutter-setup

      - name: Run Android Integration Tests
        uses: ./.github/actions/android-test
